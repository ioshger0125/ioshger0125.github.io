<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>活到老，学到老</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-10-29T03:59:36.629Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>hg</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>点点滴滴</title>
    <link href="http://yoursite.com/2019/10/29/%E7%82%B9%E7%82%B9%E6%BB%B4%E6%BB%B4/"/>
    <id>http://yoursite.com/2019/10/29/点点滴滴/</id>
    <published>2019-10-29T03:57:26.819Z</published>
    <updated>2019-10-29T03:59:36.629Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="记录以后学习中的点点滴滴"><a href="#记录以后学习中的点点滴滴" class="headerlink" title="记录以后学习中的点点滴滴"></a>记录以后学习中的点点滴滴</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h2 id=&quot;记录以后学习中的点点滴滴&quot;&gt;&lt;a href=&quot;#记录以后学习中的点点滴滴&quot; class=&quot;headerlink&quot; title=&quot;记录以后学习中的点点滴滴&quot;&gt;&lt;/a&gt;记录以后学习中的点点滴滴&lt;/h2&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>HIVE指定引擎队列的三种方式</title>
    <link href="http://yoursite.com/2019/10/29/HIVE%E6%8C%87%E5%AE%9A%E5%BC%95%E6%93%8E%E9%98%9F%E5%88%97%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    <id>http://yoursite.com/2019/10/29/HIVE指定引擎队列的三种方式/</id>
    <published>2019-10-29T03:45:02.611Z</published>
    <updated>2019-10-29T07:30:00.682Z</updated>
    
    <content type="html"><![CDATA[<p>三种修改Hive sql运行使用的yarn队列的方法：1、修改配置文件 2、指定hiveconf 3、set设置变量<a id="more"></a></p><ul><li><p>修改${HIVE_HOME}/conf/hive-site.xml配置文件</p></li><li><p>命令行参数</p></li><li><p>在已经进入cli时进行参数声明</p></li></ul><h3 id="修改配置文件方式"><a href="#修改配置文件方式" class="headerlink" title="修改配置文件方式"></a>修改配置文件方式</h3><p>在Hive中，所有的默认配置都在HIVEHOME/conf/hive−default.xml文件中，如果需要对默认的配置进行修改，可以创建一个hive−site.xml文件，放在{HIVE_HOME}/conf/hive-default.xml文件中，里面可以对一些配置进行个性化设定。在hive-site.xml的格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;hive.metastore.warehouse.dir&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;/user/hive/warehouse&lt;/value&gt;</span><br><span class="line">        &lt;description&gt;location of</span><br><span class="line">              default database for the warehouse&lt;/description&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><p>所有的配置都是放在标签之间，一个configuration标签里面可以存在多个标签。标签里面就是我们想要设定属性的名称；标签里面是我们想要设定的值；&lt;description;&lt;标签是描述在这个属性的，可以不写。绝大多少配置都是在xml文件里面配置的，因为在这里做的配置都全局用户都生效，而且是永久的。用户自定义配置会覆盖默认配置。另外，Hive也会读入Hadoop的配置，因为Hive是作为Hadoop的客户端启动的，Hive的配置会覆盖Hadoop的配置。</p><h3 id="指定hiveconf方式"><a href="#指定hiveconf方式" class="headerlink" title="指定hiveconf方式"></a>指定hiveconf方式</h3><p>在启动Hive cli的时候进行配置，可以在命令行添加-hiveconf param=value来设定参数，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hive --hiveconf mapreduce.job.queuename=queue1</span><br></pre></td></tr></table></figure><p>这样在Hive中所有MapReduce作业都提交到队列queue1中。这一设定对本次启动的会话有效，下次启动需要重新配置。</p><h3 id="set方式指定队列"><a href="#set方式指定队列" class="headerlink" title="set方式指定队列"></a>set方式指定队列</h3><p>在已经进入cli时进行参数声明，可以在HQL中使用SET关键字设定参数，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hive&gt; set mapreduce.job.queuename=queue1;</span><br></pre></td></tr></table></figure><p>这样也能达到方法二的效果。这种配置也是对本次启动的会话有效，下次启动需要重新配置。在HQL中使用SET关键字还可以查看配置的值，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hive&gt; set mapreduce.job.queuename;</span><br><span class="line"></span><br><span class="line">mapreduce.job.queuename=queue1</span><br></pre></td></tr></table></figure><p>我们可以得到mapreduce.job.queuename=queue1。如果set后面什么都不添加，这样可以查到Hive的所有属性配置，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">hive&gt; set;</span><br><span class="line">datanucleus.autoCreateSchema=true</span><br><span class="line">datanucleus.autoStartMechanismMode=checked</span><br><span class="line">datanucleus.cache.level2=false</span><br><span class="line">datanucleus.cache.level2.type=none</span><br><span class="line">datanucleus.connectionPoolingType=DBCP</span><br><span class="line">datanucleus.identifierFactory=datanucleus</span><br><span class="line">datanucleus.plugin.pluginRegistryBundleCheck=LOG</span><br><span class="line">datanucleus.storeManagerType=rdbms</span><br><span class="line">datanucleus.transactionIsolation=read-committed</span><br><span class="line">datanucleus.validateColumns=false</span><br><span class="line">datanucleus.validateConstraints=false</span><br><span class="line">datanucleus.validateTables=false</span><br></pre></td></tr></table></figure><p>上述三种设定方式的优先级依次递增。即参数声明覆盖命令行参数，命令行参数覆盖配置文件设定。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;三种修改Hive sql运行使用的yarn队列的方法：1、修改配置文件 2、指定hiveconf 3、set设置变量
    
    </summary>
    
    
      <category term="Big Data" scheme="http://yoursite.com/categories/Big-Data/"/>
    
      <category term="Hive" scheme="http://yoursite.com/categories/Big-Data/Hive/"/>
    
    
      <category term="Hive" scheme="http://yoursite.com/tags/Hive/"/>
    
      <category term="Engine Queue" scheme="http://yoursite.com/tags/Engine-Queue/"/>
    
  </entry>
  
  <entry>
    <title>Redis-cluster多节点多实例安装</title>
    <link href="http://yoursite.com/2019/10/29/Redis-cluster%E5%A4%9A%E8%8A%82%E7%82%B9%E5%A4%9A%E5%AE%9E%E4%BE%8B%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2019/10/29/Redis-cluster多节点多实例安装/</id>
    <published>2019-10-29T01:40:09.922Z</published>
    <updated>2019-10-29T07:42:16.076Z</updated>
    
    <content type="html"><![CDATA[<p>官方给出的安装文档是在一台物理机安装多个Redis实例，<a href="https://redis.io/topics/cluster-tutorial，我的生产环境是多台物理机，安装起来就更简单" target="_blank" rel="noopener">https://redis.io/topics/cluster-tutorial，我的生产环境是多台物理机，安装起来就更简单</a><a id="more"></a></p><h2 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h2><p>6台物理机 CentOS7.2-1511-minimal</p><p>ip:192.168.1.101-192.168.1.106</p><p>网络环境：内网 挂载Everything.iso作为本地yum源 ，可参考我的一篇文章 <a href="http://blog.csdn.net/github_38358734/article/details/70212412" target="_blank" rel="noopener">http://blog.csdn.net/github_38358734/article/details/70212412</a></p><ul><li><p>Redis版本：Redis-3.2.5.zip</p></li><li><p>gem版本：redis-3.3.2.gem</p></li><li><p>pip版本：pip-8.1.2</p></li><li><p>python版本：2.7.5</p></li><li><p>其他环境需要：gcc make</p></li></ul><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><ol><li>在6个节点上解压redis-3.2.5.zip 并 编译安装</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">unzip redis-3.2.5.zip</span><br><span class="line"></span><br><span class="line">cd redis-3.2.5</span><br><span class="line"></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><ol start="2"><li>检查安装过程</li></ol><p>(1) 在redis-3.2.5目录下执行 make test 报错 tcl问题</p><p>解决报错:<br><code>yum install tcl</code><br>(内网 yum –disablerepo=* –enablerepo=CentOS7-media install tcl 基于搭建好本地yum源；也可以通过yum install –dwonloadonly –downloaddir=…的方式下载安装)，重装执行make tesst 显示所有正常</p><p>（2）jemalloc:No such file or directory报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">zmalloc.h:50:31: error: jemalloc/jemalloc.h: No such file or directory</span><br><span class="line">zmalloc.h:55:2: error: #error &quot;Newer version of jemalloc required&quot;</span><br><span class="line">make[1]: *** [adlist.o] Error 1</span><br><span class="line">make[1]: Leaving directory `/data0/src/redis-2.6.2/src&apos;</span><br><span class="line">make: *** [all] Error 2</span><br></pre></td></tr></table></figure><p>解决：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make MALLOC=libc</span><br></pre></td></tr></table></figure><ol start="3"><li>部署安装cluster</li></ol><p>修改配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">appendonly yes</span><br><span class="line"></span><br><span class="line">appendfilename &quot;appendonly-6379.aof&quot; 去掉注释</span><br><span class="line"></span><br><span class="line">cluster-enabled yes  </span><br><span class="line"></span><br><span class="line">cluster-config-file /opt/nodes-6379.conf  去掉注释</span><br><span class="line"></span><br><span class="line">cluster-node-timeout 5000  去掉注释</span><br></pre></td></tr></table></figure><p>其中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bind 127.0.0.1 可以注释掉</span><br><span class="line"></span><br><span class="line">protected-mode no 默认yes</span><br></pre></td></tr></table></figure><p>  使用默认值时，启动集群提示connection refused 没有详细找原因，配置文件参数说明很详细</p><ol start="4"><li>分别启动每一个节点</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /redis-3.2.5</span><br><span class="line"></span><br><span class="line">./src/redis-server redis.conf  &gt; redis.log 2&gt;&amp;1 &amp; 输出Log</span><br></pre></td></tr></table></figure><p>如果正常启动的话 cat redis.log 格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost opt]# cat redis-6379.log </span><br><span class="line"></span><br><span class="line">6115:M 31 Aug 12:34:28.904 * Increased maximum number of open files to 10032 (it was originally set to 1024).</span><br><span class="line"></span><br><span class="line">6115:M 31 Aug 12:34:28.906 * No cluster configuration found, I&apos;m 92999f9840418a848f7b10c5bca0119e3b515fa4</span><br><span class="line">                _._                                                  </span><br><span class="line">    </span><br><span class="line">           _.-``__ &apos;&apos;-._                                             </span><br><span class="line">    </span><br><span class="line">      _.-``    `.  `_.  &apos;&apos;-._           Redis 2.9.57 (00000000/0) 64 bit</span><br><span class="line"></span><br><span class="line">  .-`` .-```.  ```\/    _.,_ &apos;&apos;-._                                   </span><br><span class="line"></span><br><span class="line"> (    &apos;      ,       .-`  | `,    )     Running in cluster mode</span><br><span class="line"></span><br><span class="line"> |`-._`-...-` __...-.``-._|&apos;` _.-&apos;|     Port: 6380</span><br><span class="line"></span><br><span class="line"> |    `-._   `._    /     _.-&apos;    |     PID: 6115</span><br><span class="line"></span><br><span class="line">  `-._    `-._  `-./  _.-&apos;    _.-&apos;                                   </span><br><span class="line"></span><br><span class="line"> |`-._`-._    `-.__.-&apos;    _.-&apos;_.-&apos;|                                  </span><br><span class="line"></span><br><span class="line"> |    `-._`-._        _.-&apos;_.-&apos;    |           http://redis.io        </span><br><span class="line"></span><br><span class="line">  `-._    `-._`-.__.-&apos;_.-&apos;    _.-&apos;                                   </span><br><span class="line"></span><br><span class="line"> |`-._`-._    `-.__.-&apos;    _.-&apos;_.-&apos;|                                  </span><br><span class="line"></span><br><span class="line"> |    `-._`-._        _.-&apos;_.-&apos;    |                                  </span><br><span class="line"></span><br><span class="line">  `-._    `-._`-.__.-&apos;_.-&apos;    _.-&apos;                                   </span><br><span class="line"></span><br><span class="line">      `-._    `-.__.-&apos;    _.-&apos;                                       </span><br><span class="line">    </span><br><span class="line">          `-._        _.-&apos;                                           </span><br><span class="line">    </span><br><span class="line">              `-.__.-&apos;                                               </span><br><span class="line">6115:M 31 Aug 12:34:28.924 # Server started, Redis version 2.9.57</span><br><span class="line">6115:M 31 Aug 12:34:28.924 * The server is now ready to accept connections on port 6379</span><br></pre></td></tr></table></figure><ol start="5"><li>在每个节点上执行 </li></ol><p><code>ps aux | grep redis</code></p><p>如果有</p><p><code>root      6109  0.6  0.9 137408  9740 pts/1    Sl   12:33   0:52 redis-server *:6379 [cluster]</code></p><p>说明服务正常启动</p><ol start="6"><li>组成集群：需要安装ruby gem<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">(1) yum install ruby ruby-rdoc</span><br><span class="line">    </span><br><span class="line">(2) gem install redis (内网可以下载安装redis-3.3.2.gem)</span><br><span class="line">    </span><br><span class="line">(3) 在其中一个节点上执行（如192.168.1.101）</span><br><span class="line">    </span><br><span class="line">    cd /redis-3.2.5</span><br><span class="line"></span><br><span class="line">    ./src/redis-trib.rb create --replicas 1 192.168.1.101:6379 192.168.1.102:6379 192.168.1.103:6379 192.168.1.104:6379 192.168.1.105:6379 192.168.1.106:6379</span><br><span class="line">  </span><br><span class="line">(4) 出现</span><br><span class="line"></span><br><span class="line">    [OK] All nodes agree about slots configuration.</span><br><span class="line"></span><br><span class="line">    &gt;&gt;&gt; Check for open slots...</span><br><span class="line"></span><br><span class="line">    &gt;&gt;&gt; Check slots coverage...</span><br><span class="line"></span><br><span class="line">    [OK] All 16384 slots covered.</span><br></pre></td></tr></table></figure></li></ol><p>说明集群安装完成  </p><p>测试信息：./src/redis-trib.rb check 192.168.1.101:6379</p><h3 id="出现的问题及解决："><a href="#出现的问题及解决：" class="headerlink" title="出现的问题及解决："></a>出现的问题及解决：</h3><ul><li><p>缺少依赖openssl<br><code>yum install openssl*</code><br>解决</p></li><li><p>不同Linux系统版本所安装的ruby版本不同（或者Yum list中的ruby版本不同）</p></li></ul><p>版本较新的redis需要的ruby版本较高，比如Redis-4.0.2 所使用的redis-4.0.1.gem 依赖ruby版本必须大于2.2，这时通常需要源码编译安装Ruby，安装完ruby后，需要建立ruby和gem的软连接。</p><ul><li>源码安装完ruby后，执行gem install redis-4.0.1.gem ，抛出异常：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ERROR:  Loading command: install (LoadError)</span><br><span class="line">cannot load such file -- zlib</span><br><span class="line">ERROR:  While executing gem ... (NameError)</span><br><span class="line">uninitialized constant Gem::Commands::InstallCommand</span><br></pre></td></tr></table></figure></li></ul><p>原因是gem运行缺少zlib库支持，解决方法是：</p><p>进入ruby源码文件夹<br>安装ruby自身提供的zlib包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd ext/zlib</span><br><span class="line">ruby ./extconf.rb</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><ul><li>再次安装依然报错：</li></ul><p>make的输出中有 </p><p><code>configuring openssl Failed to configure openssl. It will not be installed.</code> </p><p>如上字样。</p><p>然后重新配置， 在运行configure时加上了openssl路径信息即可。 </p><p>解决方式是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd ruby-2.3.0$</span><br><span class="line"></span><br><span class="line">./configure --with-openssl-dir=/software/redis-3.2.6/ext/openssl</span><br><span class="line"></span><br><span class="line">$ make$ sudo make install</span><br></pre></td></tr></table></figure><p>再次安装，成功。<br>至此，redis集群在多节点多实例的部署安装就完成。 </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;官方给出的安装文档是在一台物理机安装多个Redis实例，&lt;a href=&quot;https://redis.io/topics/cluster-tutorial，我的生产环境是多台物理机，安装起来就更简单&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://redis.io/topics/cluster-tutorial，我的生产环境是多台物理机，安装起来就更简单&lt;/a&gt;
    
    </summary>
    
    
      <category term="Redis" scheme="http://yoursite.com/categories/Redis/"/>
    
    
      <category term="Redis" scheme="http://yoursite.com/tags/Redis/"/>
    
      <category term="Redis cluster" scheme="http://yoursite.com/tags/Redis-cluster/"/>
    
  </entry>
  
  <entry>
    <title>Redis-集群监控之Redis monitor</title>
    <link href="http://yoursite.com/2019/10/29/Redis-%E9%9B%86%E7%BE%A4%E7%9B%91%E6%8E%A7%E4%B9%8BRedis%20monitor/"/>
    <id>http://yoursite.com/2019/10/29/Redis-集群监控之Redis monitor/</id>
    <published>2019-10-29T01:28:21.742Z</published>
    <updated>2019-10-29T07:35:44.833Z</updated>
    
    <content type="html"><![CDATA[<p>连续两天配置Redis 集群监控，尝试过三种开源软件，Redis-live,Redis-state,Redis-monitor ，由于内网生产环境，每一个软件的部署都费了老劲。简单总结对比一下各个监控软件，避免再有人趟坑。<a id="more"></a></p><h3 id="1、Redis-live"><a href="#1、Redis-live" class="headerlink" title="1、Redis-live"></a>1、Redis-live</h3><p>此项目5年没有维护过了，解决完所有的依赖如: python-devel redis-py, pip, setuptools, dateutil, tornado安装完成后启动 redis-monitor.py –duraion=120 后120s 自动shutting down，google了一下，很多人遇到这个问题，看到过比较一致的解释是依赖于google的js文件，内网的话就不要考虑了，没有找到任何的解决方案。内网不建议安装。</p><h3 id="2、Redis-stat"><a href="#2、Redis-stat" class="headerlink" title="2、Redis-stat"></a>2、Redis-stat</h3><p>有外网的情况下是很容易安装的，需要ruby-2.0以上版本，yum 安装的话需要卸载 ruby ruby-doc 源码安装如ruby-2.1.9，需要重建软连接 ln -s<br>内网安装gem依赖就比较麻烦了，两种方式：</p><p>（1）<a href="https://rubygems.org" target="_blank" rel="noopener">https://rubygems.org</a> 下载所有的依赖<br>（2）在一台有外网的Linux虚机安装完ruby-2.1.9 以后， 2.替换rubygems源</p><p><code>gem sources –add https://ruby.taobao.org/ –remove http://rubygems.org/</code><br><code>gem install redis-stat</code></p><p>gem 会下载所有的.gem依赖在caches里，拷贝出来放到目标主机，在目标主机执行 </p><p><code>gem install caches/*</code><br><code>cd redis-monitor-state/bin</code><br><code>./redis-state –help</code></p><p>如果报错，再下载个别gem 文件 ，我安装时缺少 readline 下载rb-readline-0.5.4.gem 单独安装 </p><p><code>gem install rb_readline-0.5.4.gem</code> </p><p>再次执行 </p><p><code>./redis-state –help</code><br>详细可参考官方：<a href="https://github.com/junegunn/redis-stat或http://www.cnblogs.com/chenpingzhao/p/5429890.html" target="_blank" rel="noopener">https://github.com/junegunn/redis-stat或http://www.cnblogs.com/chenpingzhao/p/5429890.html</a></p><p>缺点：安装完成之后发现对集群的支持不好，适合于单个实例的监控，不适用于整个集群动态监控。继续入坑……</p><h3 id="3、Redis-monitor"><a href="#3、Redis-monitor" class="headerlink" title="3、Redis-monitor"></a>3、Redis-monitor</h3><p>是对Redis-live的改进，安装跟Redis-live同样的依赖即可。<br>安装过程的难题：<br>（1）配置文件redis_live.conf 文件改动较大，json格式不要写错，否则会导致获取不到conf文件；配置文件用不合适的编辑器打开过，携带入部分错误的换行符<br>（2）源码对redis高版本的支持，可能会报错指向 /redis-monitor-master/src/api/controller/BaseController.py 第30行， 改为 slaves += str(info[“slave” + (str)(i)]) 另外 redis_monitor.py 198行，同样的改法。<br>（3）访问url 403 forbidden ，实际访问的url: ip:8888/index.html<br>安装完成，完美监控集群。<br>项目：<a href="https://github.com/LittlePeng/redis-monitor" target="_blank" rel="noopener">https://github.com/LittlePeng/redis-monitor</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;连续两天配置Redis 集群监控，尝试过三种开源软件，Redis-live,Redis-state,Redis-monitor ，由于内网生产环境，每一个软件的部署都费了老劲。简单总结对比一下各个监控软件，避免再有人趟坑。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/10/28/hello-world/"/>
    <id>http://yoursite.com/2019/10/28/hello-world/</id>
    <published>2019-10-28T06:55:49.772Z</published>
    <updated>2019-10-28T06:55:49.772Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
